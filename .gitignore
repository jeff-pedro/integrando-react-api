## Client ##

# dependencies
client/node_modules
client/.pnp
client/.pnp.js

# testing
client/coverage

# production
client/build

# misc
client/.DS_Store
client/.env.local
client/.env.development.local
client/.env.test.local
client/.env.production.local

client/npm-debug.log*
client/yarn-debug.log*
client/yarn-error.log*


## API ##

# Django
api/*.log
api/*.pot
api/*.pyc
api/*/__pycache__/
api/local_settings.py
api/db.sqlite3
api/db.sqlite3-journal
api/media
api/setup

# If your build process includes running collectstatic, then you probably don't need or want to include staticfiles/
# in your Git repository. Update and uncomment the following line accordingly.
# <django-project-name>/staticfiles/

### Django.Python Stack ###
# Byte-compiled / optimized / DLL files
api/*.py[cod]
api/*$py.class

# C extensions
api/*.so

# Distribution / packaging
api/.Python
api/build/
api/develop-eggs/
api/dist/
api/downloads/
api/eggs/
api/.eggs/
api/lib/
api/lib64/
api/parts/
api/sdist/
api/var/
api/wheels/
api/share/python-wheels/
api/*.egg-info/
api/.installed.cfg
api/*.egg
api/MANIFEST

# PyInstaller
#  Usually these files are written by a python script from a template
#  before PyInstaller builds the exe, so as to inject date/other infos into it.
api/*.manifest
api/*.spec

# Installer logs
api/pip-log.txt
api/pip-delete-this-directory.txt

# Unit test / coverage reports
api/htmlcov/
api/.tox/
api/.nox/
api/.coverage
api/.coverage.*
api/.cache
api/nosetests.xml
api/coverage.xml
api/*.cover
api/*.py,cover
api/.hypothesis/
api/.pytest_cache/
api/cover/

# Translations
api/*.mo

# Django stuff:

# Flask stuff:
api/instance/
api/.webassets-cache

# Scrapy stuff:
api/.scrapy

# Sphinx documentation
api/docs/_build/

# PyBuilder
api/.pybuilder/
api/target/

# Jupyter Notebook
api/.ipynb_checkpoints

# IPython
api/profile_default/
api/ipython_config.py

# pyenv
#   For a library or package, you might want to ignore these files since the code is
#   intended to run in multiple environments; otherwise, check them in:
# .python-version

# pipenv
#   According to pypa/pipenv#598, it is recommended to include Pipfile.lock in version control.
#   However, in case of collaboration, if having platform-specific dependencies or dependencies
#   having no cross-platform support, pipenv may install dependencies that don't work, or not
#   install all needed dependencies.
#Pipfile.lock

# PEP 582; used by e.g. github.com/David-OConnor/pyflow
api/__pypackages__/

# Celery stuff
api/celerybeat-schedule
api/celerybeat.pid

# SageMath parsed files
api/*.sage.py

# Environments
api/.env
api/.venv
api/env/
api/venv/
api/ENV/
api/env.bak/
api/venv.bak/

# Spyder project settings
api/.spyderproject
api/.spyproject

# Rope project settings
api/.ropeproject

# mkdocs documentation
api/site

# mypy
api/.mypy_cache/
api/.dmypy.json
api/dmypy.json

# Pyre type checker
api/.pyre/

# pytype static type analyzer
api/.pytype/

# Cython debug symbols
api/cython_debug/

# End of https://www.toptal.com/developers/gitignore/api/django